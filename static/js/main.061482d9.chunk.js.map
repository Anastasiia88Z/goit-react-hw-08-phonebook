{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/auth/auth-slice.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/auth/auth-selectors.js","components/Routers/PrivateRoute.jsx","components/Routers/PublicRouter.jsx","components/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/AppBar.jsx","components/App/App.jsx","index.jsx","redux/auth/auth-operations.js","redux/contacts/contacts-actions.js"],"names":["fetchContactsAction","createAsyncThunk","a","axios","get","console","log","message","addContactsAction","contact","post","deleteContactsAction","id","delete","authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isFetching","extraReducers","register","fulfilled","state","payload","logIn","logOut","_action","fetchCurrentUser","pending","rejected","entities","createReducer","_state","action","data","filter","isLoading","error","changeFilter","combineReducers","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","authSelectors","getIsLoggedIn","getUsername","getIsFetching","PrivateRoute","component","redirectTo","children","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","Navbar","Nav","exact","className","activeClassName","AuthNav","UserMenu","dispatch","useDispatch","type","onClick","AppBar","AsyncHomeView","lazy","AsyncLoginView","AsyncRegisterView","AsyncContactsView","App","useEffect","fallback","color","height","width","timeout","display","s","loader","path","ReactDOM","render","StrictMode","loading","document","getElementById","defaults","baseURL","headers","common","Authorization","credentials","rejectWithValue","_","thunkAPI","getState","persistedToken","createAction"],"mappings":"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","file":"static/js/main.061482d9.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContactsAction = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      return await axios.get('/contacts');\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n\nexport const addContactsAction = createAsyncThunk(\n  'contacts/addContacts',\n  async contact => {\n    try {\n      return await axios.post('/contacts', contact);\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n\nexport const deleteContactsAction = createAsyncThunk(\n  'contacts/deleteContacts',\n  async id => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      console.log(error.message);\n    }\n  },\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, fetchCurrentUser } from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetching: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetching = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n      state.isFetching = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetching = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { changeFilter } from './contacts-actions';\nimport {\n  fetchContactsAction,\n  addContactsAction,\n  deleteContactsAction,\n} from './contacts-operations.js';\n\nconst entities = createReducer([], {\n  [fetchContactsAction.fulfilled]: (_state, action) => action.payload.data,\n  [addContactsAction.fulfilled]: (state, { payload }) => [\n    payload.data,\n    ...state,\n  ],\n  [deleteContactsAction.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsAction.pending]: () => true,\n  [fetchContactsAction.fulfilled]: () => false,\n  [fetchContactsAction.rejected]: () => false,\n  [deleteContactsAction.fulfilled]: () => false,\n  [deleteContactsAction.pending]: () => true,\n  [deleteContactsAction.rejected]: () => false,\n  [addContactsAction.fulfilled]: () => false,\n  [addContactsAction.pending]: () => true,\n  [addContactsAction.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsAction.rejected]: (_state, action) => action.payload,\n  [fetchContactsAction.pending]: () => null,\n  [addContactsAction.pending]: () => null,\n  [addContactsAction.rejected]: (_state, action) => action.payload,\n  [deleteContactsAction.pending]: () => null,\n  [deleteContactsAction.rejected]: (_state, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({ entities, isLoading, error, filter });\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport authReducer from './auth/auth-slice';\nimport contactReducer from './contacts/contacts-reducers';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contact: contactReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetching = state => state.auth.isFetching;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetching,\n};\n\nexport default authSelectors;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({\n  component: Component,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function PublicRoute({\n  restricted = false,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React from 'react-dom';\nimport { useSelector } from 'react-redux';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport authSelectors from '../redux/auth/auth-selectors';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink exact to=\"/\" className=\"link\" activeClassName=\"activeLink\">\n          Home page\n        </NavLink>\n        {isLoggedIn && (\n          <NavLink to=\"/contacts\" className=\"link\" activeClassName=\"activeLink\">\n            Contacts\n          </NavLink>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport default function AuthNav() {\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink to=\"/register\" className=\"link\" activeClassName=\"activeLink\">\n          Register\n        </NavLink>\n        <NavLink to=\"/login\" className=\"link\" activeClassName=\"activeLink\">\n          Log in\n        </NavLink>\n      </Nav>\n    </Navbar>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport { logOut } from '../../redux/auth/auth-operations';\nimport authSelectors from '../../redux/auth/auth-selectors';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  return (\n    <Navbar>\n      <p className=\"welcome\">Welcome, {name}</p>\n      <button\n        className=\"btn-logout\"\n        type=\"button\"\n        onClick={() => dispatch(logOut())}\n      >\n        Sign out\n      </button>\n    </Navbar>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav/AuthNav';\nimport UserMenu from './UserMenu/UserMenu';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </Navbar>\n  );\n}\n","import { useEffect, lazy, Suspense } from 'react';\nimport { Switch } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport PrivateRoute from '../Routers/PrivateRoute';\nimport PublicRoute from '../Routers/PublicRouter';\nimport AppBar from '../AppBar';\nimport { fetchCurrentUser } from '../../redux/auth/auth-operations';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport s from './App.module.css';\n\nconst AsyncHomeView = lazy(() => import('../../views/HomeView'));\nconst AsyncLoginView = lazy(() => import('../../views/LoginView'));\nconst AsyncRegisterView = lazy(() => import('../../views/RegisterView'));\nconst AsyncContactsView = lazy(() => import('../../views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return !isFetching ? (\n    <div>\n      <AppBar />\n\n      <Suspense\n        fallback={\n          <Loader\n            type=\"Oval\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={2000}\n            display=\"flex\"\n            justify-content=\"center\"\n            className={s.loader}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <AsyncHomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n            <AsyncRegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <AsyncLoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <AsyncContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  ) : null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App/App.jsx';\nimport '../src/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.data);\n    }\n  },\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n"],"sourceRoot":""}